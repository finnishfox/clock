class Clock{constructor(){this.clock=document.querySelector(".clock"),this.hourArrow=this.clock.querySelector(".clock__hour-arrow"),this.minuteArrow=this.clock.querySelector(".clock__minute-arrow"),this.secondsArrow=this.clock.querySelector(".clock__second-arrow"),this.digitsContainer=this.clock.querySelector(".clock__digits"),this.animateArrows=this.animateArrows.bind(this),this.animate=this.animate.bind(this),this.setDigitSize=this.setDigitSize.bind(this),window.requestAnimationFrame(this.animateArrows),this.setDigitSize()}setDigitSize(){const t=this.digitsContainer.getBoundingClientRect().height,e=Math.round(.09*t);this.digitsContainer.style.fontSize=`${e}px`}animate(){const t=new Date;let e=t.getHours();const i=30*(e=(e%=12)||12),s=6*t.getMinutes(),r=6*t.getSeconds();this.hourArrow.style.transform=`translateX(-50%) translateY(-50%) rotateZ(${i}deg)`,this.minuteArrow.style.transform=`translateX(-50%) translateY(-50%) rotateZ(${s}deg)`,this.secondsArrow.style.transform=`translateX(-50%) translateY(-50%) rotateZ(${r}deg)`}animateArrows(){const t=Date.now();return this.timestamp===t?window.requestAnimationFrame(this.animateArrows):(this.animate(),this.timestamp=t,window.requestAnimationFrame(this.animateArrows))}}document.addEventListener("DOMContentLoaded",function(){new Clock});